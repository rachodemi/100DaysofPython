# -*- coding: utf-8 -*-
"""Hangman Game - Day 007/100 of Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i3bG7uL3xEqXIMS2ITDEPUMGWnKUCtim
"""

eng_dict = {'abruptly':'suddenly and unexpectedly.',
            'absurd':'wildly unreasonable, illogical, or inappropriate.',
            'abyss':'a deep or seemingly bottomless chasm.',
            'affix':'stick, attach, or fasten (something) to something else.',
            'askew':'not in a straight or level position.'}

french_list = [
'pour',
'des',
'te',
'ils',
'as'
]

fr_dict = {'pour':'for, to, of, toward',
           'des':'from, of the',
           'te':'you, yourself',
           'ils':'they, those',
           'as':'ace, wiz'}

stages = ['''
  +---+
  |   |
  O   |
 /|\  |
 / \  |
      |
=========
''', '''
  +---+
  |   |
  O   |
 /|\  |
 /    |
      |
=========
''', '''
  +---+
  |   |
  O   |
 /|\  |
      |
      |
=========
''', '''
  +---+
  |   |
  O   |
 /|   |
      |
      |
=========''', '''
  +---+
  |   |
  O   |
  |   |
      |
      |
=========
''', '''
  +---+
  |   |
  O   |
      |
      |
      |
=========
''', '''
  +---+
  |   |
      |
      |
      |
      |
=========
''']

logo = ''' 
 _                                             
| |                                            
| |__   __ _ _ __   __ _ _ __ ___   __ _ _ __  
| '_ \ / _` | '_ \ / _` | '_ ` _ \ / _` | '_ \ 
| | | | (_| | | | | (_| | | | | | | (_| | | | |
|_| |_|\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|
                    __/ |                      
                   |___/    '''

import random

lang = input('What language do you choose (ENG/FR): ').lower()

chosen_word = ''
level = ''
word_desc = ''

if lang == 'eng':
  chosen_word = random.choice(list(eng_dict.keys()))
  word_desc = (eng_dict[chosen_word])
elif lang == 'fr':
  chosen_word = random.choice(list(fr_dict.keys()))
  word_desc = (fr_dict[chosen_word])

word_length = len(chosen_word)

end_of_game = False
lives = 6

print(logo)

display = []
for _ in range(word_length):
    display += "_"

guessed = []


while not end_of_game:
    print(f'Clue: {word_desc}')
    
    guess = input("Guess a letter: ").lower()

    #Check guessed letter
    for position in range(word_length):
        letter = chosen_word[position]
        if letter == guess:
          if guess in guessed:
              print(f'You have already guessed {guess}. Try another guess.')
          display[position] = letter
          guessed.append(guess)

    #Join all the elements in the list and turn it into a String.
    print(f"{' '.join(display)}")

    #Check if user is wrong.
    if guess not in chosen_word:
        print(f'{guess} is not in the word. Try again!')
        lives -= 1
        if lives == 0:
            end_of_game = True
            print(f"You lose.\nThe answer is {chosen_word}")

    #Check if user has got all letters.
    if "_" not in display:
        end_of_game = True
        print("You win.")

    print(stages[lives])